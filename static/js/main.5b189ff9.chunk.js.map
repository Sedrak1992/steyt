{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","cancat","setCancat","inputValue","setInputValue","className","map","item","i","style","border","margin","width","height","display","justifyContent","alignItems","onClick","currentItems","filter","index","deleteItem","event","concat","alert","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAuDeA,MApDf,WACE,MAA4BC,mBAAS,CAAC,EAAG,EAAG,IAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,SACGJ,EAAOK,KAAI,SAACC,EAAMC,GAAP,OACV,sBACEC,MAAO,CACLC,OAAQ,gBACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,eAAgB,eAChBC,WAAY,UARhB,UAYE,oCAAOT,KACP,8BACE,wBAAQU,QAAS,kBAhCV,SAACT,GAClBN,GAAU,SAACgB,GAAD,OACRA,EAAaC,QAAO,SAACZ,EAAMa,GAAP,OAAiBA,IAAUZ,QA8BhBa,CAAWb,IAAlC,qBAJGA,QASX,wBAAQS,QAhCF,SAACK,GACU,KAAfnB,GACFD,EAAUD,EAAOsB,OAAO,CAACpB,KACzBC,EAAc,KAEdoB,MAAM,sBA2BN,qBACA,qBAAKf,MAAO,CAAEE,OAAQ,YAAaG,QAAS,SAA5C,SACE,uBACEW,MAAOtB,EACPuB,SAAU,SAACC,GAAD,OAAOvB,EAAcuB,EAAEC,OAAOH,gBCpCnCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5b189ff9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cancat, setCancat] = useState([1, 2, 3]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const deleteItem = (i) => {\n    setCancat((currentItems) =>\n      currentItems.filter((item, index) => index !== i)\n    );\n  };\n  const f = (event) => {\n    if (inputValue !== \"\") {\n      setCancat(cancat.concat([inputValue]));\n      setInputValue(\"\");\n    } else {\n      alert('enter input value')\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App1\">\n        {cancat.map((item, i) => (\n          <div\n            style={{\n              border: \"1px solid red\",\n              margin: \"10px\",\n              width: \"80px\",\n              height: \"40px\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n            }}\n            key={i}\n          >\n            <div> {item}</div>\n            <div>\n              <button onClick={() => deleteItem(i)}> X </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      <button onClick={f}> Add ++</button>\n      <div style={{ margin: \"20px auto\", display: \"babel\" }}>\n        <input\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}